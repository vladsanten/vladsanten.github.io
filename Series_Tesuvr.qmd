---
title: 'Series de tiempo univariadas: Análisis descriptivo'
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

**Inflación total de Colombia (Variación anual)**

##### Introdución

En economía es habitual el interés sobre el ritmo al que los precios de los bienes y servicios de consumo cambian de un periodo a otro, tales cambios afectan el poder adquisitivo real de los ingresos de los consumidores y su bienestar. Debido a que no todos los precios de los distintos bienes y servicios cambian en la misma proporción, un índice de precios que sintetice los cambios en los precios en una canasta lo suficientemente general es el Índice de Precios al Consumidor (IPC).

Los IPC son estadísticas oficiales comúnmente producidas por las oficinas nacionales de estadística, los ministerios de trabajo o los bancos centrales, en Colombia la operación estadística está a cargo del Departamento Administrativo Nacional de Estadística (DANE). Cuando existe un aumento generalizado y sostenido de los precios de los bienes y servicios más representativos del consumo de los hogares de un país se dice que se experimenta inflación.

Esta tasa de cambio constituye un indicador general de la inflación total, por lo tanto, tiene un papel clave para la toma de decisiones en política monetaria, la definición de la variación en los salarios, el ajuste de estados financieros, la resolución de procesos jurídicos, para calcular la pérdida de poder adquisitivo de la moneda, como uno de los indicadores usados para estimar los equilibrios en partidas de Cuentas Nacionales y como factor de análisis del comportamiento coyuntural de la economía.

Para este estudio, el interés se centra en el análisis descriptivo de la inflación total mensual como variación anual, en otras palabras, el cambio porcentual de los precios al consumidor IPC de un mes (o periodo) frente al mismo periodo doce (12) meses antes. El periodo de análisis de los datos recopilados inicia desde el 31 de enero del 2000 hasta el 31 de julio de 2022, con 271 registros.

```{r, include=FALSE}
library(feasts)
library(fable)
library(timetk)
library(tsibble)
library(xts)
library(readr)
library(plotly)
library(TSstudio)
#library(FitAR)
library(tsibble)
library(dplyr)
library(gridExtra)
library(forecast)
library(zoo)
library(fpp3)
library(fpp2)
library(ggplot2)
library(tidyverse)
library(lubridate)
library(astsa)

```

```{r, include=FALSE}
z<-read_delim("C:/Users/vlsan/OneDrive/Escritorio/Documentos/R/SeriesTemporales2022_2/ST01/Infla.csv",delim=";",
              col_names=c("Fecha","Porcentaje"),skip=1,
              col_types = cols(col_date("%Y/%m/%d"),"d"),
              locale=locale(decimal_mark=",",grouping_mark="."))
z<-z %>% filter(z$Fecha > "2000-01-01")
class(z)
###Creacion objeto tssible a partir de un objeto tibble

df_infla <- data.frame(infla=z$Porcentaje,Fecha=z$Fecha)
str(df_infla)
tbl_infla <- tibble(df_infla)
class(tbl_infla)
tbl_infla_format_fecha <- tbl_infla
tbl_infla_format_fecha$Fecha=yearmonth(tbl_infla_format_fecha$Fecha)
###El tipo de fechas debe ser alguno que reconozca tsibble
####La fecha en tsibble es importante
tsbl_infla=as_tsibble(tbl_infla_format_fecha,index=Fecha)

```

Ahora gráficamos la serie de tiempo para identificar posibles caracteristicas o patrones de comportamiento del fenómeno de la inflación.

```{r fig.align = "center", echo=FALSE}
p<-autoplot(tsbl_infla,infla)+
  labs(y = "Tasa de inflacion (Variación anual)",
       x="Periodo de estudio en meses",
       title = paste0(
         "Inflación total mensual en Colombia para 2000-2022 "))
p
```

El gráfico anterior permite apreciar la dinamica del comportamiento de la inflación total mensual medida como variación anual para Colombia en los periodos del 31 de enero de 2000 hasta el 31 de julio de 2022. Esta serie presenta tres periodos de tendencia decreciente, a saber, el periodo de aproximadamente seis años que comprende de mayo del 2000 hasta junio de 2006, donde la inflación decreció aproximadamente 6.1 puntos porcentuales de 10% a 3.9%, esto posiblemente asociado con una rapida recuperación de Colombia de la crisis de 1999 en donde el producto interno bruto decreció en 4% siendo el peor registro en la historia colombiana y uno de los mayores registros de inflación con 10% para los años inmediatamente posteriores. Por otro lado, el periodo que comprende entre octubre del 2008 hasta marzo de 2010, donde la inflación comparada contra el año inmediatamente anterior disminuyó 6.1 puntos porcentuales de un 7.93% a 1.83%, dado como resultado de la crisis financiera internacional y resultados positivos en el comercio interno que beneficiaron a país disminuyendo el impacto en la tasa representativa del mercado frente al dolar. El ultimo periodo de descenso abarca desde agosto de 2016 a febrero de 2019 el cual disminuyó un auge de inflación en aproximadamente 5.7 puntos porcentuales de 8.96% a 3.24%, asociado con el fin de negociaciones en un paro campesino de 2016 y la realización del acuerdo de paz entre grupos insurgentes que resultó en una mayor confianza inversionista y un crecimiento en la inversión extranjera a proyectos de largo aliento dentro del país.

Por otro lado, historicamente la inflación para estos periodos presenta 4 eventos que contribuyeron al aumento más que proporcional en rapidos periodos que se asocian con crisis economicas en 1999, crisis del mercado de capitales en 2008 a 2010, factores en las cadenas de producción y protestas sociales para 2016 y finalmente la pandemia de Sars-Cov-2 en 2020. Entre estos periodos podemos apreciar crecimiento en el nivel deprecios en los auges hasta una cima que estan acotadas por un valor maximo de 10.2% que se registró en julio de 2022.

**Caracteristicas de la serie de inflación total**

-   La serie presenta una `varianza marginal` que varía a lo largo del tiempo, esto a razón de que la serie parece tener un rango de valores diferente a lo largo del tiempo iniciando en un registro de 8.5%, tomando su valor mínimo en 1.61% y retomando su valor final y maximo en el periodo de estudio en 10.2%. De esta serie se puede percibir que la volatilidad a lo largo del tiempo aumenta de manera monotona, en otras palabras el rango en donde fluctuan los valores aumenta mientras el tiempo transcurre. Por lo tanto, se podría decir que la varianza marginal de la serie no es independiente del tiempo, se suguiere trabajar con una transformación de potencia para estabilizar la varianza de la serie vía `Box-Cox`.

-   A simple vista, la inflación en el periodo de estudio no cambia sus valores a lo largo del tiempo alrededor de un unico nivel, es decir, su valor promedio no es independiente del tiempo para el periodo de analisis de este estudio, por lo tanto presenta un componente `tendencial o nivel de la serie dependiente` del periodo de tiempo. Asimismo, se puede apreciar el parecido de la serie con una caminata aleatoria que inicia en 8.24% de inflación.

-   Existe presencia de una `componente cíclica (estacional o no estacional)` que puede percibirse cada 30 y 54 meses lo cual puede dar luz sobre componentes de ciclos economicos largos en la serie, esto también puede implicar que la media del proceso no sea constante y que se enmascare en presencia de tendencia.

De acuerdo, a las caracteristicas que presenta la serie se procede a realizar la transformación Box-Cox, se suguiere transformarla serie con un valor de lamda equivalente a 0.812 de tal manera que la serie se estabilice en varianza a lo largo del tiempo. De la misma forma se puede comparar en cambio en escala de medidas de la serie con varianza estabilizada, el método utilizado fue la aproximación de Guerrero para llegar a este valor, sin embargo, los valores de la serie pierden interpretabilidad.

```{r echo=FALSE, fig.align="center", fig.height=10, fig.width=20}
lambda<-forecast::BoxCox.lambda(tsbl_infla$infla, method = "guerrero", lower = -1, upper = 9)

p1<-tsbl_infla %>%
  autoplot(timetk::box_cox_vec(infla,lambda = lambda,silent = F)) +
  labs(y = "Tasa de inflacion (Transformada)",
       x="Periodo de estudio en meses",
       title = paste0(
         "Serie de tiempo inflación transformada con parámetro ",
         round(lambda,2)))
p2<-tbl_infla %>% plot_acf_diagnostics(tbl_infla_format_fecha$Fecha,.white_noise_line_color="red",
                                   tsbl_infla$infla,.lags = 48,.title="Funciones de autocorrelacion simple y parcial para inflación",
                                   .point_color="steelblue",
                                   .interactive = F)
grid.arrange(p1,p2,ncol=2)

forecast::BoxCox.lambda(box_cox(tsbl_infla$infla, lambda), method = "guerrero", lower = -1, upper = 9)

#FitAR::BoxCox.ts(z3)

```

Ademas, inmediatamente a la transformación de Box-Cox se realizan las estimaciones muestrales de las autocorrelaciones simples y parciales (FAS) y (FAP), en donde se puede observar que la FAS muestra un decaimiento lento que indica que la serie presenta tendencia que se consideró estocastica, sin embargo la serie no presenta un comportamiento repetitivo en una periodicidad a simple vista, luego no se puede afirmar que exista un componente estacional o periodico deterministico. Finalmente, se realiza sobre la serie transformada una busqueda de otro lamda de transfomación para asegurar que la transformación es apropiada y sugiere un lamda que asciende a 0.9918422, que es practicamente 1.

```{r include=FALSE}
#CONSTRUCCION DE LA SERIE CON LA VARIANZA ESTABILIZADA
#SOBRE LA MISMA DE LOS CHUNKS PASADOS
df_infla <- data.frame(infla=timetk::box_cox_vec(tsbl_infla$infla,lambda = lambda,silent = F),Fecha=z$Fecha)
str(df_infla)
tbl_infla <- tibble(df_infla)
class(tbl_infla)
tbl_infla_format_fecha <- tbl_infla
tbl_infla_format_fecha$Fecha=yearmonth(tbl_infla_format_fecha$Fecha)
###El tipo de fechas debe ser alguno que reconozca tsibble
####La fecha en tsibble es importante
tsbl_infla=as_tsibble(tbl_infla_format_fecha,index=Fecha)
```

**Análisis de tendencia o nivel de la serie**

La inflación en el periodo de estudio no cambia sus valores a lo largo del tiempo alrededor de un unico nivel, es decir, su valor promedio no es independiente del tiempo para el periodo de analisis de este estudio, por lo tanto presenta un componente tendencial o nivel de la serie dependiente del periodo de tiempo.

Asimismo, se puede apreciar el parecido de la serie con una caminata aleatoria que inicia en 8.24% de inflación y que la tendencia existente en los registros no obedece a una funcion matematica exacta, luego se puede considerar una tendencia estocastica. Bajo un enfoque descriptivo se procede a contrastar la estimación de la tendencia vía estimación polinómica local (LOESS), a continuación, se presentan 4 gráficas que evidencian la estimación de la tendencia.

```{r echo=FALSE, fig.align="center", fig.height=10, fig.width=20}
p<-tbl_infla%>%
  plot_time_series(.value=infla,.date_var=Fecha,
                   .title= "Tendencia de la inflación suave (Ventana de 75%)",.interactive = F,
                    .line_alpha=.7)
p1<-tbl_infla%>%
  plot_time_series(.value=infla,.date_var=Fecha,.smooth_color="red",
                   .title= "Tendencia de la inflación media (Ventana de 35%)",.interactive = F,
                   .smooth_period=96, .line_alpha=.7)
p2<-tbl_infla%>%
  plot_time_series(.value=infla,.date_var=Fecha,.smooth_color="purple",
                   .title= "Tendencia de la inflación media-alta (Ventana de 20%)",.interactive = F,
                   .smooth_period=54, .line_alpha=.7)

p3<-tbl_infla%>%
  plot_time_series(.value=infla,.date_var=Fecha,.smooth_color="orange",
                   .title= "Tendencia de la inflación alta (Ventana de 8%)",.interactive = F,
                   .smooth_period=24, .line_alpha=.7)
grid.arrange(p,p1,p2,p3,ncol=2)
```

Se puede apreciar en la gráfica superior izquiera que la estimación de la tendencia que considera una ventana del 75% de los datos (aproximadamente 204 meses) señala la existencia de una tendencia decreciente en la primera decada del periodo de estudio, para posteriormente cambiar su pendiente y crecer lentamente durante la segunda decada de manera suave. Para la gráfica superior derecha, se puede evidenciar que la estimación de la tendencia que considera una ventana del 35% de los datos (aproximadamente 95 meses) dentro de las 2 decadas del estudio presentan periodos en donde la inflación alcanza un valle y posteriormente tiene un auge que en ambas decadas es cercano al 7%. Asimismo, la transición hacia la gráfica inferior izquierda muestra la estimación de la tendencia que considera una ventana del 20% de los datos (aproximadamente 204 meses) que presenta posibles ciclos de 2 a 3 años dentro de cada decada que pueden verse enmascarados por la tendencia pero que con una ventana de menos observaciones se puede sospechar de posibles ciclos no periodicos (no necesariamente de duración constante). Finalmente, en la gráfica inferior derecha se observa la estimación de la tendencia que considera una ventana del 8% de los datos (aproximadamente 24 meses) presenta posibles ciclos de 2,5 años dentro de cada decada que pueden verse enmascarados por la tendencia pero que con una ventana de menos observaciones se puede sospechar de posibles ciclos no periodicos

```{r fig.align = "center", echo=FALSE, include=FALSE}
tbl_infla %>% mutate(infla_ajus=smooth_vec(infla,span = 0.35, degree = 1))%>%
  ggplot(aes(Fecha, infla)) +
  geom_line() +
  geom_line(aes(y = infla_ajus), color = "red")

```

```{r fig.align = "center", echo=FALSE,include=FALSE}
tbl_infla%>%mutate(infla_ajus=smooth_vec(infla,span = 0.5, degree = 2))%>%
  ggplot(aes(Fecha, infla)) +
  geom_line() +
  geom_line(aes(y = infla_ajus), color = "red")
```

**Sustracción de la tendencia estimada**

Una vez estimada la tendencia a traves de una aproximación no parametrica por polinomios locales, se procede a eliminar la estimación de la serie con la varianza estabilizada. Es decir, una manera de asegurar que la tendencia estimada es la correcta se observa el resultado del valor real de la serie frente a su tendencia y finalmente este resultado no debe poseer tendencia. Este componente sin tendencia tiene un papel clave para identificar y determinar patrones, comportamientos y ciclos dentro de la serie que posiblemente se enmascaraban con la tendencia.

```{r fig.align = "center", echo=FALSE, include=FALSE}

z1<-ts(tbl_infla$infla, start = c(2000,1), frequency = 12)
a<-decompose(z1)
plot(a)

```

```{r fig.height=7, fig.width=20, echo=FALSE}
#SERIE SIN TENDENCIA
tsibble_infla1<-as_tsibble(z1)

q<-tsibble_infla1 %>%
   model(STL(value ~ trend(window=21)+
              season()
    ))  %>%
  components()
tsibble_infla1[,"infdetrend"]<-tsibble_infla1$value-q$trend
p<-autoplot(tsibble_infla1,infdetrend)+
  ylim(-1.3,1.3)+
  labs(y = "Tasa de inflacion (Variación anual)",
       x="Periodo de estudio",
       title = paste0(
         "Serie de tiempo inflación sin tendencia"))
#SERIE DIFERENCIADA
tsibble_infla1[,"infdif"]<-difference(tsibble_infla1$value)
p1<-autoplot(tsibble_infla1,infdif)+
  ylim(-1.3,1.3)+labs(y = "Tasa de inflacion (Variación anual)",
       x="Periodo de estudio",
       title = paste0(
         "Serie de tiempo inflación diferenciada"))
grid.arrange(p,p1,ncol=2)
```

Las gráficas anteriores permiten contrastar el metodo de eliminación de tendencia por polinomios locales frente a la metodologia Box-Jenkins, con el objetivo de detectar estabilidad en el valor promedio y una varianza constante a lo largo del periodo de tiempo. Asimimo, se puede apreciar ambas metodologías producen una serie que estable en media pero que a simple vista no parece muy constante en varianza, es decir, ambas series presentan una volatilidad que subjetivamente generan dudas sobre la estacionariedad de la serie, esto puede ser generado por un componente estacional o ciclio que no es capturado por la tendencia vía LOESS o diferenciando la serie.

**Análisis de estacionalidad**

Mediante la suposición clasica de un modelo aditivo vemos presencia de tendencia, pero no se identifica un componente estacional que contraste a simple vista. Por otro lado, se realiza una busqueda de componentes que muestren estacionalidad usando medidas descriptivas como herramientas para detección de este fenomeno en distintos periodos del tiempo. En primera instancia, se realiza un gráfico de suberies para enfatizar los patrones estacionales es aquel en el que los datos de cada estación se recogen juntos en mini gráficos temporales separados.

```{r fig.align = "center", echo=FALSE}

#p<-tsbl_infla%>%gg_subseries(infla);p
p1<-tsibble_infla1%>%gg_subseries(infdetrend)+  
  labs(y = "Porcentaje de inflación sin tendencia",
    title = "Gráfico mensual de inflación para 2000-2022 ",
    x=""
  );p1

#grid.arrange(p,p1,ncol=1)
###Puede usar el argumento period=12 y da el mismo resultado, lo que significa es que se pueden agrupar las observaciones que est?n cada 12.
```

Las líneas azules horizontales indican las medias de cada mes, se puede observar que no existen medias que se ubiquen en valores extremos. Este tipo de gráfico permite ver claramente el patrón estacional subyacente y también muestra los cambios en la estacionalidad a lo largo del tiempo, en este caso no se evidencia a simple vista un componente estacional. En este ejemplo, el gráfico no es especialmente revelador.

```{r fig.align="center", include=FALSE}
z2<-ts(na.omit(tsibble_infla1$infdetrend), start = c(2000,1), frequency = 12)
z3<-ts(tsibble_infla1$value, start = c(2000,1), frequency = 12)
infla_df <- data.frame(year = floor(time(z2)), month = cycle(z2),
                       infla = as.numeric(z2))
infla_df$month <- factor(month.abb[infla_df$month], levels = month.abb)
library(dplyr)
infla_summary <- infla_df %>%group_by(month) %>%
  summarise(mean= mean(infla),sd = sd(infla), maximo=max(infla),minimo=min(infla))
infla_summary
```

<p>Un gráfico para promedios agrupando por meses...</p>

```{r echo=FALSE, fig.align="center", fig.height=5, fig.width=10, message=FALSE, warning=FALSE}

p1<-plot_ly(data = infla_summary, x = ~ month, y = ~ mean, type = "bar", name   = "Mean") %>%
  layout (title = "Inflación  Mensual Promedio", yaxis =list(title = "Mean", range = c(-0.05, .03)))

infla_df1 <- data.frame(year = floor(time(z3)), month = cycle(z3),
                       infla = as.numeric(z3))
infla_df1$month <- factor(month.abb[infla_df1$month], levels = month.abb)

infla_summary1 <- infla_df1%>%group_by(month) %>%
  summarise(mean= mean(infla),sd = sd(infla), maximo=max(infla),minimo=min(infla))

p2<-plot_ly (data = infla_summary1, x = ~ month, y = ~ mean, type = "bar", name   = "Mean") %>%
  layout (title = "Inflación  Mensual Promedio", yaxis =list(title = "Mean", range = c(0,4)))
fig <- subplot(p2, p1) %>% 
  layout(title = 'Comparación de valores promedio en la inflación')
fig

```

<p>Un gráfico para promedios agrupando por meses y desv</p>

```{r fig.align="center", include=FALSE}
plot_ly(infla_summary) %>%
  add_lines(x = ~ month, y = ~ mean, name = "Media",type= "bar") %>%
  add_lines(x = ~ month, y = ~ mean+sd, name = "Desviación Estándar", yaxis =
              "y2",
            line = list(color = "red", dash = "dash", width = 3))%>%

  layout(
    title = "Que titulo poner?",
    yaxis = list(title = "Media"),
    yaxis2 = list(overlaying = "y",
                  side = "right",
                  title = "Desviación Estándar"
    ),
    xaxis = list(title="Mes del año"),
    legend = list(x = 0.05, y = 0.9),
    margin = list(l = 50, r = 50)
  )
```

<h3>Exploración de multiples estacionalidades (ciclos estacionales?)</h3>

```{r fig.align = "center", echo=FALSE}
#tbl_infla %>% plot_seasonal_diagnostics(.date_var = Fecha,.value = infla,
#                                      .feature_set = c("month.lbl","quarter","year"))
df_infla1 <- data.frame(infla=tsibble_infla1$infdetrend,Fecha=z$Fecha)
str(df_infla1)
tbl_infla1 <- tibble(df_infla1)
class(tbl_infla1)
tbl_infla_format_fecha1 <- tbl_infla1
tbl_infla_format_fecha1$Fecha=yearmonth(tbl_infla_format_fecha1$Fecha)

#tbl_infla1 %>% plot_seasonal_diagnostics(.date_var = Fecha,.value = infla,
#                                      .feature_set = c("month.lbl","quarter","year"))

```

De manera individual...

```{r fig.align = "center", echo=FALSE, fig.width=14}

p1<-tbl_infla1 %>% plot_seasonal_diagnostics(.date_var = Fecha,.value = infla,
                                        .feature_set = c("month.lbl"),
                                        .interactive = FALSE)+scale_x_discrete(limits = c("diciembre","noviembre","octubre","septiembre","agosto","julio","junio","mayo","abril","marzo","febrero","enero"))+coord_flip()
p2<-ggplot(infla_df, aes(x = infla)) +
  geom_density(aes(fill = month)) +
  ggtitle("Inflación - Kernel Density Estimates by Month") +
  facet_grid(rows = vars(month))

grid.arrange(p1,p2,ncol=2)


```

<p>Puede usar el argumento <code>period=12</code> y da el mismo resultado, lo que significa es que se pueden agrupar las observaciones que están cada 12.</p>

<h3>Gráficos de densidades para explorar la estacionalidad.</h3>

A

```{r fig.align = "center", echo=FALSE,fig.width=13}

p1<-tbl_infla1 %>% plot_seasonal_diagnostics(.date_var = Fecha,.value = infla,
                                        .feature_set = c("quarter"),.interactive = FALSE)+ 
  scale_x_discrete(limits = c("4","3","2","1"))+coord_flip()

infla_df10 <- data.frame(year = floor(time(z2)), month = cycle(z2),q=ifelse(cycle(z2)<4,yes = 1,ifelse(cycle(z2)<7,2,ifelse(cycle(z2)<10,3,4))) ,
                       infla = as.numeric(z2))

infla_summary10 <- infla_df10 %>%group_by(q) %>%
  summarise(mean= mean(infla),sd = sd(infla), maximo=max(infla),minimo=min(infla))


p2<-ggplot(infla_df10, aes(x = infla)) +
  geom_density(aes(fill = q)) +
  ggtitle("Inflación - Kernel Density Estimates by Month") +
  facet_grid(rows = vars(q))

grid.arrange(p1,p2,ncol=2)

```

```{r fig.align = "center", echo=FALSE,fig.width=14}
p1<-tbl_infla1 %>% plot_seasonal_diagnostics(.date_var = Fecha,.value = infla,
                                        .feature_set = c("year"),.interactive = FALSE)+ 
  scale_x_discrete(limits = c("2022","2021","2020","2019","2018","2017","2016","2015","2014","2013",
                              "2012","2011","2010","2009","2008","2007","2006","2005","2004","2003",
                              "2002","2001","2000"))+
  coord_flip()


p2<-ggplot(infla_df10, aes(x = infla)) +
  geom_density(aes(fill = year)) +
  ggtitle("Inflación - Kernel Density Estimates by Month") +
  facet_grid(rows =vars(year) )

grid.arrange(p1,p2,ncol=2)
```

No parece haber patrón estacional en la serie, puesto que las funciones de densidad estan superpuestas entre si y por tanto los valores medios de la inflación parecen tener valores que no depende del mes. Por otro lado, podemos observar que el comportamiento en varianza tampoco es estacional.

Ahora repetimos el procedimiento pero eliminando previamente la tendencia de la serie Inflación

Para este gráfico observamos que las colas de las densidades de distribución estimadas son mas cortas.

Pueden hacer lo mismo pero en vez de quitar la tendencia, hacemos una diferenciación

Ahora un gráfico de lineas

Procedemos a extraer las subseries por años. Para identificar posibles comportamientos que permitan describir el comportamiento de la Inflación

**Análisis de Rezagos**

Diagrama de dispersión de las observaciones originales con sus respectivos retardos...

```{r fig.height=15, fig.width=15, fig.align = "center", echo=FALSE}

astsa::lag1.plot(z2, 16,lwl=2, gg=TRUE,pch=19, col=astsa.col(4, .3),cex=1,bgl='transparent',box.col=gray(1))
```

A color

```{r fig.align = "center", echo=FALSE,include=FALSE}
ts_lags(z2,lags=1:12)

```

<p>Observando la figura enterior de concluye que las relaciones de la variable original con los primeros 4 resagos presenta son fuertes y positivas ($\rho> 0.8$) y para los resagos más lejanos ttata... lo que significa que los valores inmediados anteriores afectan de manera directo y fenoméno con memoria</p>

Tomando cuatrenios (Rezagos estacionales) (por rehacer)

```{r fig.align = "center", echo=FALSE}
ts_lags(z2,  lags = c(12, 24, 36, 48), margin = 0.01) #Rezagos estacionales
```

<h3>

<center>Análisis del <b>ACF</b> y <b>AMI</b> muestral</center>

</h3>

```{r fig.align = "center", echo=FALSE, include=FALSE}


par(mfrow=c(2,1))
par(mar = c(2.7,2,2.7,2))
acf(z3, 16, main="Función de Autocorrrelación") #DECAIMIENTO SUAVE O LENTO
pacf(z3, 16, main="Función de Autocorrrelación Parcial")

```

```{r fig.align = "center", echo=FALSE, include=FALSE}
par(mar = c(2.7,2,2.7,2))
acf(z2, 48, main="Función de Autocorrrelación") #DECAIMIENTO SUAVE O LENTO
pacf(z2, 48, main="Función de Autocorrrelación Parcial")

```

Versión interractiva:

```{r fig.align = "center", echo=FALSE}

tbl_infla %>% plot_acf_diagnostics(tbl_infla_format_fecha$Fecha,tsibble_infla1$infdetrend,.lags = 18,
                                   .title="Funciones de autocorrelacion simple y parcial para inflación",
                                   .white_noise_line_color="red",
            .point_color="steelblue")
```

Por otro lado para el AMI

```{r fig.align = "center", echo=FALSE}
par(mfrow=c(2,1))
p<-nonlinearTseries::mutualInformation(z2,lag.max = 80,n.partitions = 50,
                                    units = "Bits",do.plot = F) #c("Nats", "Bits", "Bans")
a<-data.frame(p$time.lag,p$mutual.information)
ggplot(a, aes(x=p.time.lag, y=p.mutual.information)) +
  geom_segment( aes(x=p.time.lag, xend=p.time.lag, y=0, yend=p.mutual.information)) +
  geom_point( color="orange", size=4) +
  theme_light() +
  theme(
    panel.grid.major.x = element_blank(),
    panel.border = element_blank(),
    axis.ticks.x = element_blank()
  ) +
  xlab("Rezagos de la serie")+ ggtitle("Gráfica del promedio de información mutua (AMI)")+
  ylab("")


#tseriesChaos::mutual(z2, partitions = 50, lag.max = 180, plot=TRUE)
```

<h3>

<center>Análisis de <b>Ciclos</b> y <b> Estacionalidades </b></center>

</h3>

```{r fig.align="center", include=FALSE}
#str(z1)
TSstudio::ts_heatmap(z2,title = "Mapa de Calor - Inflación en Colombia 2000-2022")
TSstudio::ts_heatmap(z3,title = "Mapa de Calor - Inflación en Colombia 2000-2022")

```

<p>Del gráfico vemos que el flujo de calor de la Inflación para Colombia ocurre de manera vertical indicando la dispocición del ciclo. En color oscuro se marca los los picos de dicho ciclo. Además esto podría sugerir que el comportamiento de tal ciclo no es estacional.</p>

<h3>Análisis de ciclos y estacionalidad utilizando el periodograma:</h3>

Para detectar el componente de estacionalidad y de ciclicidad se hará uso del periodograma:...

<p>Con el formato <em>formato base</em></p>

```{r include=FALSE}
q<-spectrum(z2,log='no',xlim=c(0,6))
which.max(q$spec)
abline(v=.26666667, lty=2,col="red")

spectrum(z2,log='no',span=c(5,5),xlim=c(0,1))
abline(v=.26666667, lty=2,col="red")
```

<p>Con el <em> formato mvspec</em></p>

```{r echo=FALSE, fig.align="center"}
infla.per = astsa::mvspec(z2, log="no",xlim=c(0,1),ylab="Espectro",xlab="Frecuencia",main = "Periodograma para inflación sin tendencia")
ubicacionz1=which.max(infla.per$spec)
abline(v=infla.per$freq[ubicacionz1], lty=2,col="red")
sprintf("El valor de la frecuencia donde se máximiza el periodograma para z1 es: %s",infla.per$freq[ubicacionz1])
n_rec <- length(infla.per$spec)
valor_seg_per_rec=sort(infla.per$spec,partial=n_rec-1)[n_rec-1]
ubica_segundo_rec=which(infla.per$spec==valor_seg_per_rec)
sprintf("El valor de la frecuencia donde se alcanza el segundo máximo para el periodograma para REC es: %s",infla.per$freq[ubica_segundo_rec])
abline(v=infla.per$freq[ubica_segundo_rec], lty=2,col="blue")
#tercero
n_rec2 <- length(infla.per$spec)
valor_seg_per_rec2=sort(infla.per$spec,partial=n_rec-3)[n_rec-3]
ubica_segundo_rec2=which(infla.per$spec==valor_seg_per_rec2)
sprintf("El valor de la frecuencia donde se alcanza el tercer máximo para el periodograma para REC es: %s",infla.per$freq[ubica_segundo_rec2])
abline(v=infla.per$freq[ubica_segundo_rec2], lty=2,col="darkgreen")

```

###residuos dos

```{r echo=FALSE, fig.align="center", fig.width=15}
#FALTA UBICAR
#tsibble_infla1 %>%
#  model(X_13ARIMA_SEATS(value ~ transform(`function` = "none") +x11(mode = "add"#)))%>%
#  components() %>%
#  autoplot()


p1<-tsibble_infla1 %>%
  model(STL(value ~ trend(window=21)+
              season(window = "periodic"))) %>%
  components() %>%
  autoplot()

z3 %>%stl(t.window=21, s.window="periodic") -> fit
p2<-autoplot(z1, series="Serie original") +
  autolayer(trendcycle(fit), series="Tendencia") +
  autolayer(seasadj(fit), series="Ajuste estacional") +
  xlab("") + ylab("Inflación ") +
  ggtitle("Componentes para la serie de inflación en Colombia 2000-2022") +
  scale_colour_manual(values=c("black","blue","red"),
                      breaks=c("Serie original","Ajuste estacional","Tendencia"))
grid.arrange(p1,p2,ncol=2)

```

**Métodos de predicción**

*Metodología de suavizamiento exponencial*

```{r echo=FALSE, fig.width=13}
z3_train <- window(z3, end = c(2015,10))
z3_test <- window(z3, start = c(2015,11))
#length(z3_train) 190 Entrenamiento
#length(z3_test) 81 Prueba



#holt_t <- ets(z3_train, model="AAN", damped = F)
#autoplot(forecast(holt_t,h=81))
#autoplot(forecast(holt_t,h=81))+ylim(c(0,15))
#holt.f1 <- forecast(holt_t, h = 81)
#accuracy(holt.f1, z3_test)
#summary(holt_t )
#
#
#holtwin_t <- ets(z3_train, model="ZZZ",damped = TRUE)
#summary(holtwin_t )
#autoplot(forecast(holtwin_t,h=81))
#holtwin.f1 <- forecast(holtwin_t, h = 81)
#accuracy(holtwin.f1, z3_test)


# identify optimal ALFA parameter
beta <- seq(0.01, 1, 0.1)
RMSE <- NA
#BETA PRIMERO PARAMETRO DE TENDENCIA
for(i in seq_along(beta)) {
  hw.expo <- ets(z3_train, "AAN", alpha   = beta[i])
  future <- forecast(hw.expo, h = 81)
  RMSE[i] = accuracy(future, z3_test)[2,2]
}

error <- data_frame(beta, RMSE)
minimum <- filter(error, RMSE == min(RMSE))
p1<-ggplot(error, aes(beta, RMSE)) +
  geom_line() +
  geom_point(data = minimum, color = "red", size = 2) +
  ggtitle("Impacto de la alpha en los errores de predicción",
          subtitle = "El alfa que minimiza RMSE equivale a 0.11")


beta <- seq(0.01, 1, 0.1)
RMSE <- NA
#BETA PRIMERO PARAMETRO DE TENDENCIA
for(i in seq_along(beta)) {
  hw.expo <- ets(z3_train, "AAN",beta = beta[i])
  future <- forecast(hw.expo, h = 81)
  RMSE[i] = accuracy(future, z3_test)[2,2]
}

error <- data_frame(beta, RMSE)
minimum <- filter(error, RMSE == min(RMSE))
p2<-ggplot(error, aes(beta, RMSE)) +
  geom_line() +
  geom_point(data = minimum, color = "red", size = 2) +
  ggtitle("Impacto de la beta en los errores de predicción",
          subtitle = "El beta que minimiza RMSE equivale a 0.01")
grid.arrange(p1,p2,ncol=2)
```

```{r echo=FALSE, fig.width=13}
#GAMMA PRIMERO PARAMETRO DE TENDENCIA
#for(i in seq_along(beta)) {
#  hw.expo <- ets(z3_train, "ZZN", damped = T, beta=0.01,phi = beta[i])
#  future <- forecast(hw.expo, h = 81)
#  RMSE[i] = accuracy(future, z3_test)[2,2]
#}
#
#error <- data_frame(beta, RMSE)
#minimum <- filter(error, RMSE == min(RMSE))
#p1<-ggplot(error, aes(beta, RMSE)) +
#  geom_line() +
#  geom_point(data = minimum, color = "red", size = 2) +
#  ggtitle("Impacto de la gamma en los errores de predicción",
#          subtitle = "El gamma que minimiza RMSE equivale a 0.01")
#
#p1
#Parametro de dampen
#dan <- seq(0.01, 1, 0.01)
#RMSE <- NA
#
#for(i in seq_along(dan)) {
#  hw.expo1 <- ets(z3_train, "AAN",damped = T,beta=0.01,phi=0.81)
#  future1 <- forecast(hw.expo1, h = 81)
#  RMSE[i] = accuracy(future1, z3_test)[2,2]
#}
#
#error1 <- data_frame(dan, RMSE)
#minimum1 <- filter(error1, RMSE == min(RMSE))
#ggplot(error1, aes(dan, RMSE)) +
#  geom_line() +
#  geom_point(data = minimum1, color = "blue", size = 2) +
#  ggtitle("Impacto de la gamma en los errores de predicción",
#          subtitle = "El beta que minimiza RMSE equivale a ")


hw.expo <- ets(z3_train, "AAN",damped = F,beta = 0.01,alpha=0.11)
hw.expo1 <- ets(z3_train, "AAN",damped = T,beta = 0.01,alpha=0.11)

holt.f2 <- forecast(hw.expo, h = 81)
accuracy(holt.f2, z3_test)
holt.f3 <- forecast(hw.expo1, h = 81)
accuracy(holt.f3, z3_test)


p<-hw.expo %>%
  forecast(h = 81) %>%
  autoplot()+ autolayer(z3_test)+
  labs(title = "Australian food expenditure",
       y = "$ (billions)")
p1<-hw.expo1 %>%
  forecast(h = 81) %>%
  autoplot()+ autolayer(z3_test)+
  labs(title = "Australian food expenditure",
       y = "$ (billions)")

grid.arrange(p,p1,ncol=1)
```

Modelo con todo menos 5

```{r}
z3_com <- window(z3, end = c(2022,2))
z3_r<-window(z3, start = c(2022,3))


hw.expo_com <- ets(z3_com, "AAN",damped = T)
holt.com <- forecast(hw.expo_com, h = 5)
sprintf("El RMSE para el modelo de Holt con damped es de %f ", accuracy(holt.com, z3_r)[2,2])

p<-hw.expo_com %>%
  forecast(h = 5) %>%
  autoplot()+ autolayer(z3_r)+
  labs(title = "Australian food expenditure",
       y = "$ (billions)")
p

```

```{r}
checkresiduals(hw.expo_com)
```

```{r}
##Z1 Y Z3  SON LA SERIE VARIANZA ESTABILIZADA Y OBJETO TS
##Z2 ES LA SERIE SIN TENDENCIA 
##tsibble_infla1[,"infdif"] ES LA SERIE PERO SIN INDICES

```

